accuracy.o:
accuracy.o = accuracy.o
_mod_accuracy: accuracy.o
_mod_accuracy = $(accuracy.o)

assert.o: common.fypp _mod_io
assert.o = assert.o $(common.fypp) $(_mod_io)
_mod_assert: assert.o
_mod_assert = $(assert.o)

blacsenv.o: _mod_scalapackfx _mod_message common.fypp _mod_globalenv
blacsenv.o = blacsenv.o $(_mod_scalapackfx) $(_mod_message) $(common.fypp) $(_mod_globalenv)
_mod_blacsenv: blacsenv.o
_mod_blacsenv = $(blacsenv.o)

constants.o: _mod_accuracy
constants.o = constants.o $(_mod_accuracy)
_mod_constants: constants.o
_mod_constants = $(constants.o)

#:if WITH_MPI
#:if WITH_SCALAPACK
environment.o: common.fypp _mod_mpienv _mod_blacsenv
environment.o = environment.o $(common.fypp) $(_mod_mpienv) $(_mod_blacsenv)
_mod_environment: environment.o
_mod_environment = $(environment.o)
#:else
environment.o: common.fypp _mod_mpienv
environment.o = environment.o $(common.fypp) $(_mod_mpienv)
_mod_environment: environment.o
_mod_environment = $(environment.o)
#:endif
#:else
#:if WITH_SCALAPACK
environment.o: common.fypp _mod_blacsenv
environment.o = environment.o $(common.fypp) $(_mod_blacsenv)
_mod_environment: environment.o
_mod_environment = $(environment.o)
#:else
environment.o: common.fypp
environment.o = environment.o $(common.fypp)
_mod_environment: environment.o
_mod_environment = $(environment.o)
#:endif
#:endif

#:if WITH_MPI
globalenv.o: common.fypp _mod_mpifx
globalenv.o = globalenv.o $(common.fypp) $(_mod_mpifx)
_mod_globalenv: globalenv.o
_mod_globalenv = $(globalenv.o)
#:else
globalenv.o: common.fypp
globalenv.o = globalenv.o $(common.fypp)
_mod_globalenv: globalenv.o
_mod_globalenv = $(globalenv.o)
#:endif

memman.o: _mod_accuracy
memman.o = memman.o $(_mod_accuracy)
_mod_memman: memman.o
_mod_memman = $(memman.o)

mpienv.o: _mod_mpifx
mpienv.o = mpienv.o $(_mod_mpifx)
_mod_mpienv: mpienv.o
_mod_mpienv = $(mpienv.o)

optarg.o: _mod_accuracy
optarg.o = optarg.o $(_mod_accuracy)
_mod_optarg: optarg.o
_mod_optarg = $(optarg.o)

#:if WITH_MPI
parallelenv.o: common.fypp _mod_globalenv _mod_mpifx
parallelenv.o = parallelenv.o $(common.fypp) $(_mod_globalenv) $(_mod_mpifx)
_mod_parallelenv: parallelenv.o
_mod_parallelenv = $(parallelenv.o)
#:else
parallelenv.o: common.fypp _mod_globalenv
parallelenv.o = parallelenv.o $(common.fypp) $(_mod_globalenv)
_mod_parallelenv: parallelenv.o
_mod_parallelenv = $(parallelenv.o)
#:endif

scalapackenv.o: _mod_scalapackfx _mod_accuracy common.fypp _mod_globalenv _mod_message
scalapackenv.o = scalapackenv.o $(_mod_scalapackfx) $(_mod_accuracy) $(common.fypp) $(_mod_globalenv) $(_mod_message)
_mod_scalapackenv: scalapackenv.o
_mod_scalapackenv = $(scalapackenv.o)

unitconversion.o: _mod_constants
unitconversion.o = unitconversion.o $(_mod_constants)
_mod_unitconversion: unitconversion.o
_mod_unitconversion = $(unitconversion.o)

